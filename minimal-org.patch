diff -r 4271c9ce4803 init.el
--- a/init.el	Mon Sep 28 21:50:30 2009 +1300
+++ b/init.el	Tue Sep 29 17:39:19 2009 +1300
@@ -1,36 +1,37 @@
 (setq dotfiles-dir (file-name-directory
 		    (or (buffer-file-name) load-file-name)))
 
-(add-to-list 'load-path dotfiles-dir)
-(add-to-list 'load-path (concat dotfiles-dir "/vendor"))
-(add-to-list 'load-path (concat dotfiles-dir "/vendor/org/lisp"))
-(add-to-list 'load-path (concat dotfiles-dir "/vendor/org/babel"))
+;; (add-to-list 'load-path dotfiles-dir)
+;; (add-to-list 'load-path (concat dotfiles-dir "/vendor"))
+;(add-to-list 'load-path (concat dotfiles-dir "/vendor/org/lisp"))
+;(add-to-list 'load-path (concat dotfiles-dir "/vendor/org/babel"))
 (add-to-list 'load-path (concat dotfiles-dir "/vendor/org/"))
 (add-to-list 'load-path (concat dotfiles-dir "/vendor/remember"))
-(add-to-list 'load-path (concat dotfiles-dir "/vendor/lilypond"))
-(add-to-list 'load-path (concat dotfiles-dir "/vendor/auctex"))
-(add-to-list 'load-path (concat dotfiles-dir "/vendor/company"))
-(add-to-list 'load-path (concat dotfiles-dir "/vendor/haskell"))
+;; (add-to-list 'load-path (concat dotfiles-dir "/vendor/lilypond"))
+;; (add-to-list 'load-path (concat dotfiles-dir "/vendor/auctex"))
+;; (add-to-list 'load-path (concat dotfiles-dir "/vendor/company"))
+;; (add-to-list 'load-path (concat dotfiles-dir "/vendor/haskell"))
 
-(setq custom-file (concat dotfiles-dir "custom.el"))
-(setq gnus-init-file (concat dotfiles-dir "dot-gnus.el"))
+;; (setq custom-file (concat dotfiles-dir "custom.el"))
+;; (setq gnus-init-file (concat dotfiles-dir "dot-gnus.el"))
 
-;; (add-to-list 'Info-directory-list (concat dotfiles-dir "vendor/share/info"))
-(setenv "PYMACS_PYTHON" "~/.emacs.d/usr/bin/python")
+;; ;; (add-to-list 'Info-directory-list (concat dotfiles-dir "vendor/share/info"))
+;; (setenv "PYMACS_PYTHON" "~/.emacs.d/usr/bin/python")
 
-;; Load up my config stuff
+;; ;; Load up my config stuff
 (setq tweaks-dir (concat dotfiles-dir "/tweaks"))
 (add-to-list 'load-path tweaks-dir)
-(mapc #'load (directory-files tweaks-dir nil ".*el$"))
+;; (mapc #'load (directory-files tweaks-dir nil ".*el$"))
+(load "50org-mode.el")
 
-;; load the customize stuff
-(load custom-file 'noerror)
+;; ;; load the customize stuff
+;; (load custom-file 'noerror)
 
-;; Work around a bug on OS X where system-name is FQDN
-;;(if (eq system-type 'darwin)
-;; This seems to be need on my linux box as well.
-(setq my-system-name (car (split-string system-name "\\.")))
+;; ;; Work around a bug on OS X where system-name is FQDN
+;; ;;(if (eq system-type 'darwin)
+;; ;; This seems to be need on my linux box as well.
+;; (setq my-system-name (car (split-string system-name "\\.")))
 
-;; You can keep system-specific customizations here
-(setq system-specific-config (concat dotfiles-dir my-system-name ".el"))
-(if (file-exists-p system-specific-config) (load system-specific-config))
\ No newline at end of file
+;; ;; You can keep system-specific customizations here
+;; (setq system-specific-config (concat dotfiles-dir my-system-name ".el"))
+;; (if (file-exists-p system-specific-config) (load system-specific-config))
\ No newline at end of file
diff -r 4271c9ce4803 tweaks/50org-mode.el
--- a/tweaks/50org-mode.el	Mon Sep 28 21:50:30 2009 +1300
+++ b/tweaks/50org-mode.el	Tue Sep 29 17:39:19 2009 +1300
@@ -2,41 +2,8 @@
 (add-to-list 'auto-mode-alist '("\\.org\\'" . org-mode))
 
 (setq org-directory "~/org/")
-
-(setq org-default-notes-file (concat org-directory "inbox.org"))
 (setq org-agenda-files (list org-directory (concat org-directory "projects/")))
 
-(setq org-hide-leading-stars t)
-
-;; Keep tasks with dates off the global todo lists
-(setq org-agenda-todo-ignore-with-date t)
-
-;; Remove completed deadline tasks from the agenda view
-(setq org-agenda-skip-deadline-if-done t)
-
-;; Remove completed scheduled tasks from the agenda view
-(setq org-agenda-skip-scheduled-if-done t)
-
-(setq org-use-fast-todo-selection t)
-(setq org-todo-keywords
-      '((sequence "TODO(t)" "WAITING(w@)" "|" "DONE(d!)")
-	(sequence "|" "CANCELED" "DELEGATED(e@)")))
-(setq org-log-into-drawer "LOGBOOK")
-(setq org-tag-alist
-      '((:startgroup . nil)
-	("@call" . ?c) ("@office" . ?o) ("@home" . ?h) ("@computer" . ?m)
-	(:endgroup . nil)
-        ("REFILE" . ?r)))
-
-(setq org-enforce-todo-depedencies t)
-(defun org-summary-todo (n-done n-not-done)
-  "Switch entry to DONE when all subentries are done, to TODO otherwise."
-  (let (org-log-done org-log-states)   ; turn off logging
-    (org-todo (if (= n-not-done 0) "DONE" "TODO"))))
-
-(add-hook 'org-after-todo-statistics-hook 'org-summary-todo)
-
-
 (setq org-agenda-custom-commands
       '(("w" "Week's Agenda and Tasks"
 	 ((agenda)
@@ -45,83 +12,9 @@
          nil
          ("~/org/output/weekly.org"))))
 
-;; Setup for Org Remember  
-(require 'org-protocol)
-(require 'remember)
-(org-remember-insinuate)
-(require 'org-mac-protocol)
-
-;; Start clock if a remember buffer includes :CLOCK-IN:
-(add-hook 'remember-mode-hook 'my-start-clock-if-needed 'append)
-
-(defun my-start-clock-if-needed ()
-  (save-excursion
-    (goto-char (point-min))
-    (when (re-search-forward " *:CLOCK-IN: *" nil t)
-      (replace-match "")
-      (org-clock-in))))
-
-(add-to-list 'org-remember-templates 
-	     '("Todo" ?t "* TODO %?\n  %i\n  %a" "inbox.org"))
-(add-to-list 'org-remember-templates
-             '("Notes" ?n "* %^{Title}\n  %i\n  %a" "inbox.org"))
-(add-to-list 'org-remember-templates
-             '("Interuption" ?i "* %^{Title}\n :CLOCK-IN: \n %?" "inbox.org"))
-
-;; Refile setup
-(setq org-completion-use-ido t)
-(setq org-refile-targets (quote ((org-agenda-files :maxlevel . 3) (nil :maxlevel . 3))))
-(setq org-refile-use-outline-path (quote file))
-(setq org-outline-path-complete-in-steps t)
-
-;; Babel mode
-(require 'org-babel-init)
-(require 'org-babel-python)
-
-(org-babel-load-library-of-babel)
-
 ;; MobileOrg Support
 (setq org-mobile-directory "/Volumes/pjdixon/org")
 (setq org-mobile-inbox-for-pull "~/org/inbox.org")
 
-;; Website and Blog setup
-(require 'org-blog)
-(setq org-blog-directory "~/website/blog/")
-(setq org-blog-directory "~/website/blog/unfinished/")
 
-(setq org-publish-project-alist
-      '(("blog"
-	 :base-directory "~/website/blog/"
-         :base-extension "org"
-	 :publishing-directory "~/Sites/blog/"
-	 :publishing-function org-publish-org-to-html
-	 :auto-index t
-	 :blog-base-url "http://localhost/~pjd67/blog/"
-	 :blog-title "e?macs"
-	 :blog-description "Phil Dixon on emacs and macs"
-	 :blog-export-rss nil
-	 :index-function org-publish-blog-index
-	 :index-filename "index.org"
-	 :index-title "Clever Title Here"
-	 :index-posts 2
-	 :auto-preamble t
-	 :auto-postamble t)
 
-	("static"
-	 :bash-directory "~/website/static"
-	 :base-extension "css\\|js\\|png\\|jpg\\|pdf"
-	 :publishing-directory "~/Sites/"
-	 :recursive t
-	 :publishing-function org-publish-attachment
-	 )
-
-	("web"
-	 :bash-directory "~/website/"
-	 :base-extension "org"
-	 :publishing-directory "~/Sites/"
-	 :recursive t
-	 :publishing-function org-publish-org-to-html
-	 :auto-preamble t
-	 )))
-
-
